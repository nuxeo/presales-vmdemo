{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Auto-update route 53 record",

  "Resources": {

    "LambdaFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": ["lambda.amazonaws.com"]
            },
            "Action": [
              "sts:AssumeRole"
            ]
          }]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess",
          "arn:aws:iam::aws:policy/AmazonRoute53FullAccess"
        ],
        "Tags": [{
            "Key": "billing-category",
            "Value": "presales"
          },
          {
            "Key": "billing-subcategory",
            "Value": "generic"
          }
        ]
      }
    },

    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async(event) => {}"
        },
        "Handler": "index.handler",
        "Description": "A lambda function to shutdown EC2 instances",
        "FunctionName": "nuxeo-route53-auto-update",
        "Role": {
          "Fn::GetAtt": ["LambdaFunctionRole", "Arn"]
        },
        "Runtime": "nodejs8.10",
        "Tags": [{
            "Key": "billing-category",
            "Value": "presales"
          },
          {
            "Key": "billing-subcategory",
            "Value": "generic"
          }
        ],
        "Timeout": 10
      }
    },
    "CloudWatchRule": {
      "Type" : "AWS::Events::Rule",
      "Properties" : {
          "Description" : "Update Route53 records when EC2 instances are started",
          "Name" : "nuxeo-route53-auto-update",
          "EventPattern": {
            "source": [
              "aws.ec2"
            ],
            "detail-type": [
              "EC2 Instance State-change Notification"
            ],
            "detail": {
              "state": [
                "running",
                "stopping"
              ]
            }
          },
          "State" : "DISABLED",
          "Targets" : [{
            "Arn": {
              "Fn::GetAtt": ["LambdaFunction", "Arn"]
            },
            "Id" : "Lambda"
          }]
        }
    }
  }
}
